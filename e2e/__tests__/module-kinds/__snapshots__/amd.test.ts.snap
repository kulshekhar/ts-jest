// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`run with options: {"module":"amd","allowSyntheticDefaultImports":false} 1`] = `
  × jest --no-cache
  ↳ exit code: 1
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  ts-jest[config] (WARN) message TS151001: If you have issues related to imports, you should consider setting \`esModuleInterop\` to \`true\` in your TypeScript configuration file (usually \`tsconfig.json\`). See https://blogs.msdn.microsoft.com/typescript/2018/01/31/announcing-typescript-2-7/#easier-ecmascript-module-interoperability for more information.
  PASS ./import-legacy.spec.ts
  PASS ./import-star.spec.ts
  ts-jest[ts-compiler] (WARN) import-default.spec.ts:1:8 - error TS1259: Module '"<cwd>/lib"' can only be default-imported using the 'esModuleInterop' flag
  
  1 import lib from './lib'
           ~~~
  
    lib.d.ts:5:1
      5 export = lib
        ~~~~~~~~~~~~
      This module is declared with using 'export =', and can only be used with a default import when using the 'esModuleInterop' flag.
  FAIL ./import-default.spec.ts
    ● import default
  
      expect(received).toBe(expected) // Object.is equality
  
      Expected: "function"
      Received: "undefined"
  
        2 | 
        3 | test('import default', () => {
      > 4 |   expect(typeof lib).toBe('function')
          |                      ^
        5 |   expect(lib()).toBe('foo')
        6 |   expect(lib.bar).toBe('bar')
        7 | })
  
        at Object.<anonymous> (import-default.spec.ts:4:22)
  
  Test Suites: 1 failed, 2 passed, 3 total
  Tests:       1 failed, 2 passed, 3 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;

exports[`run with options: {"module":"amd","allowSyntheticDefaultImports":true} 1`] = `
  × jest --no-cache
  ↳ exit code: 1
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  PASS ./import-legacy.spec.ts
  PASS ./import-star.spec.ts
  FAIL ./import-default.spec.ts
    ● import default
  
      expect(received).toBe(expected) // Object.is equality
  
      Expected: "function"
      Received: "undefined"
  
        2 | 
        3 | test('import default', () => {
      > 4 |   expect(typeof lib).toBe('function')
          |                      ^
        5 |   expect(lib()).toBe('foo')
        6 |   expect(lib.bar).toBe('bar')
        7 | })
  
        at Object.<anonymous> (import-default.spec.ts:4:22)
  
  Test Suites: 1 failed, 2 passed, 3 total
  Tests:       1 failed, 2 passed, 3 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;

exports[`run with options: {"module":"amd","esModuleInterop":false} 1`] = `
  × jest --no-cache
  ↳ exit code: 1
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  ts-jest[config] (WARN) message TS151001: If you have issues related to imports, you should consider setting \`esModuleInterop\` to \`true\` in your TypeScript configuration file (usually \`tsconfig.json\`). See https://blogs.msdn.microsoft.com/typescript/2018/01/31/announcing-typescript-2-7/#easier-ecmascript-module-interoperability for more information.
  PASS ./import-legacy.spec.ts
  PASS ./import-star.spec.ts
  FAIL ./import-default.spec.ts
    ● import default
  
      expect(received).toBe(expected) // Object.is equality
  
      Expected: "function"
      Received: "undefined"
  
        2 | 
        3 | test('import default', () => {
      > 4 |   expect(typeof lib).toBe('function')
          |                      ^
        5 |   expect(lib()).toBe('foo')
        6 |   expect(lib.bar).toBe('bar')
        7 | })
  
        at Object.<anonymous> (import-default.spec.ts:4:22)
  
  Test Suites: 1 failed, 2 passed, 3 total
  Tests:       1 failed, 2 passed, 3 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;

exports[`run with options: {"module":"amd","esModuleInterop":true} 1`] = `
  × jest --no-cache
  ↳ exit code: 1
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  PASS ./import-legacy.spec.ts
  ts-jest[ts-compiler] (WARN) import-star.spec.ts:5:10 - error TS2349: This expression is not callable.
    Type 'typeof lib' has no call signatures.
  
  5   expect(lib()).toBe('foo')
             ~~~
  
    import-star.spec.ts:1:1
      1 import * as lib from './lib'
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.
  FAIL ./import-star.spec.ts
    ● import default
  
      expect(received).toBe(expected) // Object.is equality
  
      Expected: "function"
      Received: "object"
  
        2 | 
        3 | test('import default', () => {
      > 4 |   expect(typeof lib).toBe('function')
          |                      ^
        5 |   expect(lib()).toBe('foo')
        6 |   expect(lib.bar).toBe('bar')
        7 | })
  
        at Object.<anonymous> (import-star.spec.ts:4:22)
  
  PASS ./import-default.spec.ts
  
  Test Suites: 1 failed, 2 passed, 3 total
  Tests:       1 failed, 2 passed, 3 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;

exports[`run with options: {"module":"amd"} 1`] = `
  × jest --no-cache
  ↳ exit code: 1
  ===[ STDOUT ]===================================================================
  
  ===[ STDERR ]===================================================================
  ts-jest[config] (WARN) message TS151001: If you have issues related to imports, you should consider setting \`esModuleInterop\` to \`true\` in your TypeScript configuration file (usually \`tsconfig.json\`). See https://blogs.msdn.microsoft.com/typescript/2018/01/31/announcing-typescript-2-7/#easier-ecmascript-module-interoperability for more information.
  PASS ./import-legacy.spec.ts
  PASS ./import-star.spec.ts
  FAIL ./import-default.spec.ts
    ● import default
  
      expect(received).toBe(expected) // Object.is equality
  
      Expected: "function"
      Received: "undefined"
  
        2 | 
        3 | test('import default', () => {
      > 4 |   expect(typeof lib).toBe('function')
          |                      ^
        5 |   expect(lib()).toBe('foo')
        6 |   expect(lib.bar).toBe('bar')
        7 | })
  
        at Object.<anonymous> (import-default.spec.ts:4:22)
  
  Test Suites: 1 failed, 2 passed, 3 total
  Tests:       1 failed, 2 passed, 3 total
  Snapshots:   0 total
  Time:        XXs
  Ran all test suites.
  ================================================================================
`;
