// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`config init should create a jest config file with cli options for config type default 1`] = `
"/** @type {import('ts-jest').JestConfigWithTsJest} **/
module.exports = {
  testEnvironment: "node",
  transform: {
    "^.+\\.tsx?$": ["ts-jest",{}],
  },
};"
`;

exports[`config init should create a jest config file with cli options for config type default and type "module" package.json 1`] = `
"/** @type {import('ts-jest').JestConfigWithTsJest} **/
export default {
  testEnvironment: "node",
  transform: {
    "^.+\\.tsx?$": ["ts-jest",{}],
  },
};"
`;

exports[`config init should create a jest config file with cli options for config type js-with-babel-full-options 1`] = `
"/** @type {import('ts-jest').JestConfigWithTsJest} **/
module.exports = {
  testEnvironment: "jsdom",
  transform: {
    "^.+\\.jsx?$": "babel-jest",
  },
};"
`;

exports[`config init should create a jest config file with cli options for config type js-with-babel-full-options and type "module" package.json 1`] = `
"/** @type {import('ts-jest').JestConfigWithTsJest} **/
export default {
  testEnvironment: "jsdom",
  transform: {
    "^.+\\.jsx?$": "babel-jest",
  },
};"
`;

exports[`config init should create a jest config file with cli options for config type js-with-ts-full-options 1`] = `
"/** @type {import('ts-jest').JestConfigWithTsJest} **/
module.exports = {
  testEnvironment: "jsdom",
  transform: {
    "^.+\\.[tj]sx?$": ["ts-jest",{tsconfig:"tsconfig.test.json"}],
  },
};"
`;

exports[`config init should create a jest config file with cli options for config type js-with-ts-full-options and type "module" package.json 1`] = `
"/** @type {import('ts-jest').JestConfigWithTsJest} **/
export default {
  testEnvironment: "jsdom",
  transform: {
    "^.+\\.[tj]sx?$": ["ts-jest",{tsconfig:"tsconfig.test.json"}],
  },
};"
`;

exports[`config init should update package.json for config type default when user defines jest config via package.json 1`] = `
"{
  "name": "mock",
  "version": "0.0.0-mock.0",
  "jest": {
    "transform": {
      "^.+\\\\.tsx?$": [
        "ts-jest",
        {}
      ]
    }
  }
}"
`;

exports[`config init should update package.json for config type js-with-babel-full-options when user defines jest config via package.json 1`] = `
"{
  "name": "mock",
  "version": "0.0.0-mock.0",
  "jest": {
    "transform": {
      "^.+\\\\.jsx?$": "babel-jest",
      "^.+\\\\.tsx?$": [
        "ts-jest",
        {
          "tsconfig": "tsconfig.test.json"
        }
      ]
    }
  }
}"
`;

exports[`config init should update package.json for config type js-with-ts-full-options when user defines jest config via package.json 1`] = `
"{
  "name": "mock",
  "version": "0.0.0-mock.0",
  "jest": {
    "transform": {
      "^.+\\\\.[tj]sx?$": [
        "ts-jest",
        {
          "tsconfig": "tsconfig.test.json"
        }
      ]
    }
  }
}"
`;

exports[`config migrate should generate transform config with existing transform options for js-with-babel 1`] = `
"module.exports = {
  transform: {
    '^.+\\\\.jsx?$': 'babel-jest',
    '^.+\\\\.tsx?$': [
      'ts-jest',
      {},
    ],
  },
}
"
`;

exports[`config migrate should generate transform config with existing transform options for js-with-ts 1`] = `
"module.exports = {
  transform: {
    '^.+\\\\.[tj]sx?$': [
      'ts-jest',
      {},
    ],
    '^.+\\\\.tsx?$': [
      'ts-jest',
      {},
    ],
  },
}
"
`;

exports[`config migrate should migrate preset if valid preset value is used 1`] = `
""jest": {
  "transform": {
    "^.+\\\\.tsx?$": [
      "ts-jest",
      {}
    ]
  }
}
"
`;

exports[`config migrate should migrate preset if valid preset value is used 2`] = `
""jest": {
  "transform": {
    "^.+\\\\.tsx?$": [
      "ts-jest",
      {}
    ]
  }
}
"
`;

exports[`config migrate should migrate preset if valid preset value is used 3`] = `
""jest": {
  "transform": {
    "^.+\\\\.tsx?$": [
      "ts-jest",
      {}
    ]
  }
}
"
`;

exports[`config migrate should reset testMatch if testRegex is used 1`] = `
""jest": {
  "testRegex": "foo-pattern",
  "transform": {
    "^.+\\\\.tsx?$": [
      "ts-jest",
      {}
    ]
  }
}
"
`;

exports[`config migrate should reset testMatch if testRegex is used 2`] = `
""jest": {
  "testRegex": [
    "foo-pattern"
  ],
  "transform": {
    "^.+\\\\.tsx?$": [
      "ts-jest",
      {}
    ]
  }
}
"
`;

exports[`config migrate should reset testMatch if testRegex is used 3`] = `
""jest": {
  "testRegex": [],
  "testMatch": [
    "**/__tests__/**/*.(spec|test).[tj]s?(x)"
  ],
  "transform": {
    "^.+\\\\.tsx?$": [
      "ts-jest",
      {}
    ]
  }
}
"
`;

exports[`config migrate should reset testMatch if testRegex is used 4`] = `
""jest": {
  "testMatch": [
    "**/__tests__/**/*.(spec|test).[tj]s?(x)"
  ],
  "transform": {
    "^.+\\\\.tsx?$": [
      "ts-jest",
      {}
    ]
  }
}
"
`;

exports[`config migrate should reset testMatch if testRegex is used 5`] = `
""jest": {
  "testRegex": "foo-pattern",
  "transform": {
    "^.+\\\\.tsx?$": [
      "ts-jest",
      {}
    ]
  }
}
"
`;
