"use strict";(self.webpackChunkts_jest_docs=self.webpackChunkts_jest_docs||[]).push([["6041"],{2762:function(e,s,n){n.r(s),n.d(s,{frontMatter:()=>c,default:()=>p,toc:()=>u,metadata:()=>t,assets:()=>h,contentTitle:()=>a});var t=JSON.parse('{"id":"guides/esm-support","title":"ESM Support","description":"Jest will take into account of the following things when working with ESM:","source":"@site/docs/guides/esm-support.md","sourceDirName":"guides","slug":"/guides/esm-support","permalink":"/ts-jest/docs/next/guides/esm-support","draft":false,"unlisted":false,"editUrl":"https://github.com/kulshekhar/ts-jest/edit/main/website/docs/guides/esm-support.md","tags":[],"version":"current","lastUpdatedBy":"renovate[bot]","lastUpdatedAt":1752781439000,"frontMatter":{"id":"esm-support","title":"ESM Support"},"sidebar":"docs","previous":{"title":"Version checking","permalink":"/ts-jest/docs/next/getting-started/version-checking"},"next":{"title":"Hybrid Node module","permalink":"/ts-jest/docs/next/guides/hybrid-node-module"}}'),i=n(5893),o=n(65),r=n(7057),l=n(4250),d=n(1924);let c={id:"esm-support",title:"ESM Support"},a=void 0,h={},u=[{value:"Configure Jest runtime",id:"configure-jest-runtime",level:2},{value:"Configure <code>tsconfig</code>",id:"configure-tsconfig",level:2},{value:"Using ES module values",id:"using-es-module-values",level:3},{value:"Using hybrid module values",id:"using-hybrid-module-values",level:3},{value:"Configure Jest config",id:"configure-jest-config",level:2},{value:"Using ESM presets",id:"using-esm-presets",level:3},{value:"NOT using ESM presets",id:"not-using-esm-presets",level:3},{value:"Resolve <code>.mjs/.mts</code> extensions",id:"resolve-mjsmts-extensions",level:2}];function j(e){let s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.admonition,{type:"important",children:[(0,i.jsx)(s.p,{children:"Jest will take into account of the following things when working with ESM:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://jestjs.io/docs/en/ecmascript-modules",children:"ESM runtime"})}),"\n",(0,i.jsxs)(s.li,{children:["The value of ",(0,i.jsx)(s.code,{children:"module"})," option in tsconfig file is either:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"Node16/Node18/NodeNext"}),": this ",(0,i.jsx)(s.strong,{children:"MUST"})," go together with ",(0,i.jsx)(s.code,{children:'type: "module"'})," in ",(0,i.jsx)(s.code,{children:"package.json"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Otherwise, the value ",(0,i.jsx)(s.strong,{children:"MUST BE"})," one of the ES values, e.g. ",(0,i.jsx)(s.code,{children:"ES2015"}),", ",(0,i.jsx)(s.code,{children:"ES2020"})," etc..."]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,i.jsxs)(s.p,{children:["One can configure ",(0,i.jsx)(s.code,{children:"ts-jest"})," to work with Jest in ESM mode by following the steps below."]}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsxs)(s.p,{children:["We have ",(0,i.jsx)(s.a,{href:"https://github.com/kulshekhar/ts-jest/tree/main/examples",children:(0,i.jsx)(s.strong,{children:"EXAMPLE APPS"})})," which contains some projects which have basic setup to work with ESM (next to CJS config)."]})}),"\n","\n",(0,i.jsx)(d.Z,{toc:u.slice(0)}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"configure-jest-runtime",children:"Configure Jest runtime"}),"\n",(0,i.jsxs)(s.admonition,{type:"warning",children:[(0,i.jsx)(s.p,{children:"Jest runtime currently has a few issues related to support ESM:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Not taking into account of ",(0,i.jsx)(s.code,{children:'type: "module"'})," field in ",(0,i.jsx)(s.code,{children:"package.json"})," yet to run as ESM mode."]}),"\n",(0,i.jsxs)(s.li,{children:["Mocking ES modules are not supported yet, track progress here ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/10976",children:"https://github.com/jestjs/jest/pull/10976"})]}),"\n"]}),(0,i.jsxs)(s.p,{children:["Overall progress and discussion can be found at ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/issues/9430",children:"https://github.com/jestjs/jest/issues/9430"})]})]}),"\n",(0,i.jsxs)(s.admonition,{type:"info",children:[(0,i.jsxs)(s.p,{children:["If one is using Jest config in TypeScript, one should install ",(0,i.jsx)(s.code,{children:"ts-node"})," as a dev dependency."]}),(0,i.jsxs)(r.Z,{groupId:"npm2yarn",children:[(0,i.jsx)(l.Z,{value:"npm",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"\nnpm install -D ts-node\n\n"})})}),(0,i.jsx)(l.Z,{value:"yarn",label:"Yarn",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"\nyarn add --dev ts-node\n\n"})})}),(0,i.jsx)(l.Z,{value:"pnpm",label:"pnpm",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"\npnpm add -D ts-node\n\n"})})}),(0,i.jsx)(l.Z,{value:"bun",label:"Bun",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"\nbun add --dev ts-node\n\n"})})})]})]}),"\n",(0,i.jsxs)(s.p,{children:["Execute Jest with with ",(0,i.jsx)(s.code,{children:"--experimental-vm-modules"})," flag for ",(0,i.jsx)(s.code,{children:"NodeJs"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"\nnode --experimental-vm-modules node_modules/jest/bin/jest.js\n\n"})}),"\n",(0,i.jsxs)(s.admonition,{type:"tip",children:[(0,i.jsxs)(s.p,{children:["Alternative way for ",(0,i.jsx)(s.code,{children:"Yarn"})," users:"]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"\nyarn node --experimental-vm-modules $(yarn bin jest)\n\n"})}),(0,i.jsxs)(s.p,{children:["This command will also work if you use ",(0,i.jsx)(s.code,{children:"Yarn Plug'n'Play."})]})]}),"\n",(0,i.jsxs)(s.h2,{id:"configure-tsconfig",children:["Configure ",(0,i.jsx)(s.code,{children:"tsconfig"})]}),"\n",(0,i.jsxs)(s.p,{children:["One can choose ",(0,i.jsx)(s.strong,{children:"EITHER ONE"})," of the following options for ",(0,i.jsx)(s.code,{children:"tsconfig"}),":"]}),"\n",(0,i.jsx)(s.h3,{id:"using-es-module-values",children:"Using ES module values"}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsxs)(s.p,{children:["See more details about ",(0,i.jsx)(s.a,{href:"https://www.typescriptlang.org/docs/handbook/modules/reference.html#es2015-es2020-es2022-esnext",children:"ES module values"})]})}),"\n",(0,i.jsx)(s.admonition,{type:"important",children:(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"ts-jest"})," recommends to use ",(0,i.jsx)(s.code,{children:"ES2022"})," or ",(0,i.jsx)(s.code,{children:"ESNext"})," when using ",(0,i.jsx)(s.code,{children:"ES"})," module values to achieve full support for all recent ESM features."]})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",metastring:'title="tsconfig.spec.json"',children:'{\n  "compilerOptions": {\n    "module": "ES2022", // or `ESNext`\n    "target": "ESNext",\n    "esModuleInterop": true\n  }\n}\n'})}),"\n",(0,i.jsx)(s.h3,{id:"using-hybrid-module-values",children:"Using hybrid module values"}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsxs)(s.p,{children:["See more details about ",(0,i.jsx)(s.a,{href:"https://www.typescriptlang.org/docs/handbook/modules/reference.html#node16-node18-nodenext",children:"hybrid module"})]})}),"\n",(0,i.jsx)(s.admonition,{type:"important",children:(0,i.jsxs)(s.p,{children:["Currently, the code transpiler ",(0,i.jsx)(s.strong,{children:"ONLY"})," supports hybrid values with ",(0,i.jsx)(s.code,{children:"isolatedModules: true"})]})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",metastring:'title="tsconfig.spec.json"',children:'{\n  "compilerOptions": {\n    "module": "Node16", // or Node18/NodeNext\n    "target": "ESNext",\n    "esModuleInterop": true,\n    "isolatedModules": true\n  }\n}\n'})}),"\n",(0,i.jsx)(s.h2,{id:"configure-jest-config",children:"Configure Jest config"}),"\n",(0,i.jsxs)(s.admonition,{type:"tip",children:[(0,i.jsxs)(s.p,{children:["Jest will attempt to load ",(0,i.jsx)(s.strong,{children:"ESM"})," files from ",(0,i.jsx)(s.code,{children:"node_modules"})," with default ",(0,i.jsx)(s.code,{children:"jest-resolve"})," which usually works for most of the cases.\nHowever, there are cases like Angular libraries ",(0,i.jsx)(s.strong,{children:"ESM"})," built files or ",(0,i.jsx)(s.strong,{children:"ESM"})," files which are outside ",(0,i.jsx)(s.code,{children:"node_modules"})," might not be loaded\ncorrectly."]}),(0,i.jsxs)(s.p,{children:["To fix that, one can use ",(0,i.jsx)(s.code,{children:"moduleNameMapper"})," in jest config to instruct Jest to load the correct ",(0,i.jsx)(s.strong,{children:"ESM"})," files or create a\ncustom Jest ",(0,i.jsx)(s.a,{href:"https://jestjs.io/docs/configuration#resolver-string",children:"resolver"}),"."]})]}),"\n",(0,i.jsx)(s.h3,{id:"using-esm-presets",children:"Using ESM presets"}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsxs)(s.p,{children:["See available ESM preset creator functions ",(0,i.jsx)(s.a,{href:"/ts-jest/docs/next/getting-started/presets",children:(0,i.jsx)(s.strong,{children:"HERE"})})]})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest'\nimport { createDefaultEsmPreset } from 'ts-jest'\n\nconst presetConfig = createDefaultEsmPreset({\n  //...options\n})\n\nexport default {\n  ...presetConfig,\n} satisfies Config\n"})}),"\n",(0,i.jsx)(s.h3,{id:"not-using-esm-presets",children:"NOT using ESM presets"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest'\nimport { TS_EXT_TO_TREAT_AS_ESM, ESM_TS_TRANSFORM_PATTERN } from 'ts-jest'\n\nexport default {\n  extensionsToTreatAsEsm: [...TS_EXT_TO_TREAT_AS_ESM],\n  transform: {\n    [ESM_TS_TRANSFORM_PATTERN]: [\n      'ts-jest',\n      {\n        //...other `ts-jest` options\n        useESM: true,\n      },\n    ],\n  },\n} satisfies Config\n"})}),"\n",(0,i.jsxs)(s.h2,{id:"resolve-mjsmts-extensions",children:["Resolve ",(0,i.jsx)(s.code,{children:".mjs/.mts"})," extensions"]}),"\n",(0,i.jsxs)(s.p,{children:["To work with ",(0,i.jsx)(s.code,{children:".mts"})," extension, besides the requirement to run Jest and ",(0,i.jsx)(s.code,{children:"ts-jest"})," in ESM mode, there are a few extra requirements to be met:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"package.json"})," should contain ",(0,i.jsx)(s.code,{children:'"type": "module"'})]}),"\n",(0,i.jsxs)(s.li,{children:["A custom Jest resolver to resolve ",(0,i.jsx)(s.code,{children:".mjs"})," extension, for example:"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",metastring:'title="custom-resolver.ts"',children:"import type { SyncResolver } from 'jest-resolve'\n\nconst mjsResolver: SyncResolver = (path, options) => {\n  const mjsExtRegex = /\\.mjs$/i\n  const resolver = options.defaultResolver\n  if (mjsExtRegex.test(path)) {\n    try {\n      return resolver(path.replace(mjsExtRegex, '.mts'), options)\n    } catch {\n      // use default resolver\n    }\n  }\n\n  return resolver(path, options)\n}\n\nexport default mjsResolver\n"})}),"\n",(0,i.jsx)(s.p,{children:"and then add this to Jest config:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest'\n\nconst config: Config = {\n  //...other options\n  resolver: '<rootDir>/path/to/custom-resolver.ts',\n}\n"})})]})}function p(e={}){let{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(j,{...e})}):j(e)}}}]);