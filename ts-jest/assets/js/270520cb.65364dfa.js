"use strict";(self.webpackChunkts_jest_docs=self.webpackChunkts_jest_docs||[]).push([["7851"],{2777:function(t,e,s){s.r(e),s.d(e,{frontMatter:()=>l,toc:()=>j,default:()=>p,metadata:()=>n,assets:()=>d,contentTitle:()=>c});var n=JSON.parse('{"id":"getting-started/options/tsconfig","title":"TypeScript Config option","description":"The tsconfig option allows you to define which tsconfig JSON file to use. An inline compiler options object can also be specified instead of a file path.","source":"@site/versioned_docs/version-29.0/getting-started/options/tsconfig.md","sourceDirName":"getting-started/options","slug":"/getting-started/options/tsconfig","permalink":"/ts-jest/docs/29.0/getting-started/options/tsconfig","draft":false,"unlisted":false,"editUrl":"https://github.com/kulshekhar/ts-jest/edit/main/website/versioned_docs/version-29.0/getting-started/options/tsconfig.md","tags":[],"version":"29.0","lastUpdatedBy":"renovate[bot]","lastUpdatedAt":1758091624000,"frontMatter":{"title":"TypeScript Config option"}}'),o=s(4848),r=s(4429),i=s(6346),a=s(6754);let l={title:"TypeScript Config option"},c,d={},j=[{value:"Examples",id:"examples",level:3},{value:"Path to a <code>tsconfig</code> file",id:"path-to-a-tsconfig-file",level:4},{value:"Inline compiler options",id:"inline-compiler-options",level:4},{value:"Disable auto-lookup",id:"disable-auto-lookup",level:4}];function u(t){let e={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"tsconfig"})," option allows you to define which ",(0,o.jsx)(e.code,{children:"tsconfig"})," JSON file to use. An inline ",(0,o.jsx)(e.a,{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html#compiler-options",children:"compiler options"})," object can also be specified instead of a file path."]}),"\n",(0,o.jsxs)(e.p,{children:["By default ",(0,o.jsx)(e.code,{children:"ts-jest"})," will try to find a ",(0,o.jsx)(e.code,{children:"tsconfig.json"})," in your project. If it cannot find one, it will use the default TypeScript ",(0,o.jsx)(e.a,{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html#compiler-options",children:"compiler options"}),"; except, ",(0,o.jsx)(e.code,{children:"ES2015"})," is used as ",(0,o.jsx)(e.code,{children:"target"})," instead of ",(0,o.jsx)(e.code,{children:"ES5"}),"."]}),"\n",(0,o.jsxs)(e.p,{children:["If you need to use defaults and force ",(0,o.jsx)(e.code,{children:"ts-jest"})," to use the defaults even if there is a ",(0,o.jsx)(e.code,{children:"tsconfig.json"})," in your project, you can set this option to ",(0,o.jsx)(e.code,{children:"false"}),"."]}),"\n",(0,o.jsx)(e.h3,{id:"examples",children:"Examples"}),"\n",(0,o.jsxs)(e.h4,{id:"path-to-a-tsconfig-file",children:["Path to a ",(0,o.jsx)(e.code,{children:"tsconfig"})," file"]}),"\n",(0,o.jsxs)(e.p,{children:["The path should be relative to the current working directory where you start Jest from. You can also use ",(0,o.jsx)(e.code,{children:"<rootDir>"})," in the path to start from the project root dir."]}),"\n",(0,o.jsxs)(i.A,{groupId:"code-examples",children:[(0,o.jsx)(a.A,{value:"js",label:"JavaScript",children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",metastring:"tab",children:"// jest.config.js\n/** @type {import('ts-jest').JestConfigWithTsJest} */\nmodule.exports = {\n  // [...]\n  transform: {\n    // '^.+\\\\.[tj]sx?$' to process ts,js,tsx,jsx with `ts-jest`\n    // '^.+\\\\.m?[tj]sx?$' to process ts,js,tsx,jsx,mts,mjs,mtsx,mjsx with `ts-jest`\n    '^.+\\\\.tsx?$': [\n      'ts-jest',\n      {\n        tsconfig: 'tsconfig.test.json',\n      },\n    ],\n  },\n}\n"})})}),(0,o.jsx)(a.A,{value:"ts",label:"TypeScript",children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-ts",metastring:"tab",children:"// jest.config.ts\nimport type { JestConfigWithTsJest } from 'ts-jest'\n\nconst jestConfig: JestConfigWithTsJest = {\n  // [...]\n  transform: {\n    // '^.+\\\\.[tj]sx?$' to process ts,js,tsx,jsx with `ts-jest`\n    // '^.+\\\\.m?[tj]sx?$' to process ts,js,tsx,jsx,mts,mjs,mtsx,mjsx with `ts-jest`\n    '^.+\\\\.tsx?$': [\n      'ts-jest',\n      {\n        tsconfig: 'tsconfig.test.json',\n      },\n    ],\n  },\n}\n\nexport default jestConfig\n"})})}),(0,o.jsx)(a.A,{value:"JSON",children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-JSON",metastring:"tab",children:'// package.json\n{\n  // [...]\n  "jest": {\n    "transform": {\n      // \'^.+\\\\.[tj]sx?$\' to process ts,js,tsx,jsx with `ts-jest`\n      // \'^.+\\\\.m?[tj]sx?$\' to process ts,js,tsx,jsx,mts,mjs,mtsx,mjsx with `ts-jest`\n      "^.+\\\\.tsx?$": [\n        "ts-jest",\n        {\n          "tsconfig": "tsconfig.test.json"\n        }\n      ]\n    }\n  }\n}\n'})})})]}),"\n",(0,o.jsx)(e.h4,{id:"inline-compiler-options",children:"Inline compiler options"}),"\n",(0,o.jsxs)(e.p,{children:["Refer to the TypeScript ",(0,o.jsx)(e.a,{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html#compiler-options",children:"compiler options"})," for reference.\nIt's basically the same object you'd put in your ",(0,o.jsx)(e.code,{children:"tsconfig.json"}),"'s ",(0,o.jsx)(e.code,{children:"compilerOptions"}),"."]}),"\n",(0,o.jsxs)(i.A,{groupId:"code-examples",children:[(0,o.jsx)(a.A,{value:"js",label:"JavaScript",children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",metastring:"tab",children:"// jest.config.js\n/** @type {import('ts-jest').JestConfigWithTsJest} */\nmodule.exports = {\n  // [...]\n  transform: {\n    // '^.+\\\\.[tj]sx?$' to process ts,js,tsx,jsx with `ts-jest`\n    // '^.+\\\\.m?[tj]sx?$' to process ts,js,tsx,jsx,mts,mjs,mtsx,mjsx with `ts-jest`\n    '^.+\\\\.tsx?$': [\n      'ts-jest',\n      {\n        tsconfig: {\n          importHelpers: true,\n        },\n      },\n    ],\n  },\n}\n"})})}),(0,o.jsx)(a.A,{value:"ts",label:"TypeScript",children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-ts",metastring:"tab",children:"// jest.config.ts\nimport type { JestConfigWithTsJest } from 'ts-jest'\n\nconst jestConfig: JestConfigWithTsJest = {\n  // [...]\n  transform: {\n    // '^.+\\\\.[tj]sx?$' to process ts,js,tsx,jsx with `ts-jest`\n    // '^.+\\\\.m?[tj]sx?$' to process ts,js,tsx,jsx,mts,mjs,mtsx,mjsx with `ts-jest`\n    '^.+\\\\.tsx?$': [\n      'ts-jest',\n      {\n        tsconfig: {\n          importHelpers: true,\n        },\n      },\n    ],\n  },\n}\n\nexport default jestConfig\n"})})}),(0,o.jsx)(a.A,{value:"JSON",children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-JSON",metastring:"tab",children:'// package.json\n{\n  // [...]\n  "jest": {\n    "transform": {\n      // \'^.+\\\\.[tj]sx?$\' to process ts,js,tsx,jsx with `ts-jest`\n      // \'^.+\\\\.m?[tj]sx?$\' to process ts,js,tsx,jsx,mts,mjs,mtsx,mjsx with `ts-jest`\n      "^.+\\\\.tsx?$": [\n        "ts-jest",\n        {\n          "tsconfig": {\n            "importHelpers": true\n          }\n        }\n      ]\n    }\n  }\n}\n'})})})]}),"\n",(0,o.jsx)(e.h4,{id:"disable-auto-lookup",children:"Disable auto-lookup"}),"\n",(0,o.jsxs)(e.p,{children:["By default ",(0,o.jsx)(e.code,{children:"ts-jest"})," will try to find a ",(0,o.jsx)(e.code,{children:"tsconfig.json"})," in your project. But you may not want to use it at all and keep TypeScript default options. You can achieve this by setting ",(0,o.jsx)(e.code,{children:"tsconfig"})," to ",(0,o.jsx)(e.code,{children:"false"}),"."]}),"\n",(0,o.jsxs)(i.A,{groupId:"code-examples",children:[(0,o.jsx)(a.A,{value:"js",label:"JavaScript",children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",metastring:"tab",children:"// jest.config.js\n/** @type {import('ts-jest').JestConfigWithTsJest} */\nmodule.exports = {\n  // [...]\n  transform: {\n    // '^.+\\\\.[tj]sx?$' to process ts,js,tsx,jsx with `ts-jest`\n    // '^.+\\\\.m?[tj]sx?$' to process ts,js,tsx,jsx,mts,mjs,mtsx,mjsx with `ts-jest`\n    '^.+\\\\.tsx?$': [\n      'ts-jest',\n      {\n        tsconfig: false,\n      },\n    ],\n  },\n}\n"})})}),(0,o.jsx)(a.A,{value:"ts",label:"TypeScript",children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-ts",metastring:"tab",children:"// jest.config.ts\nimport type { JestConfigWithTsJest } from 'ts-jest'\n\nconst jestConfig: JestConfigWithTsJest = {\n  // [...]\n  transform: {\n    // '^.+\\\\.[tj]sx?$' to process ts,js,tsx,jsx with `ts-jest`\n    // '^.+\\\\.m?[tj]sx?$' to process ts,js,tsx,jsx,mts,mjs,mtsx,mjsx with `ts-jest`\n    '^.+\\\\.tsx?$': [\n      'ts-jest',\n      {\n        tsconfig: false,\n      },\n    ],\n  },\n}\n\nexport default jestConfig\n"})})}),(0,o.jsx)(a.A,{value:"JSON",children:(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-JSON",metastring:"tab",children:'// package.json\n{\n  // [...]\n  "jest": {\n    "transform": {\n      // \'^.+\\\\.[tj]sx?$\' to process ts,js,tsx,jsx with `ts-jest`\n      // \'^.+\\\\.m?[tj]sx?$\' to process ts,js,tsx,jsx,mts,mjs,mtsx,mjsx with `ts-jest`\n      "^.+\\\\.tsx?$": [\n        "ts-jest",\n        {\n          "tsconfig": {\n            "tsconfig": false\n          }\n        }\n      ]\n    }\n  }\n}\n'})})})]})]})}function p(t={}){let{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}},6754:function(t,e,s){s.d(e,{A:()=>r});var n=s(4848);s(6540);var o=s(9836);function r({children:t,hidden:e,className:s}){return(0,n.jsx)("div",{role:"tabpanel",className:(0,o.A)("tabItem_Ymn6",s),hidden:e,children:t})}},6346:function(t,e,s){s.d(e,{A:()=>b});var n=s(4848),o=s(6540),r=s(9836),i=s(9783),a=s(1984),l=s(6347),c=s(9117),d=s(3341),j=s(8562),u=s(423);function p(t){return o.Children.toArray(t).filter(t=>"\n"!==t).map(t=>{if(!t||(0,o.isValidElement)(t)&&function(t){let{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h({value:t,tabValues:e}){return e.some(e=>e.value===t)}var f=s(7007);function x({className:t,block:e,selectedValue:s,selectValue:o,tabValues:i}){let l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),d=t=>{let e=t.currentTarget,n=i[l.indexOf(e)].value;n!==s&&(c(e),o(n))},j=t=>{let e=null;switch(t.key){case"Enter":d(t);break;case"ArrowRight":{let s=l.indexOf(t.currentTarget)+1;e=l[s]??l[0];break}case"ArrowLeft":{let s=l.indexOf(t.currentTarget)-1;e=l[s]??l[l.length-1]}}e?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":e},t),children:i.map(({value:t,label:e,attributes:o})=>(0,n.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:t=>{l.push(t)},onKeyDown:j,onClick:d,...o,className:(0,r.A)("tabs__item","tabItem_LNqP",o?.className,{"tabs__item--active":s===t}),children:e??t},t))})}function m({lazy:t,children:e,selectedValue:s}){let i=(Array.isArray(e)?e:[e]).filter(Boolean);if(t){let t=i.find(t=>t.props.value===s);return t?(0,o.cloneElement)(t,{className:(0,r.A)("margin-top--md",t.props.className)}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:i.map((t,e)=>(0,o.cloneElement)(t,{key:e,hidden:t.props.value!==s}))})}function g(t){let e=function(t){let e,{defaultValue:s,queryString:n=!1,groupId:r}=t,i=function(t){let{values:e,children:s}=t;return(0,o.useMemo)(()=>{let t=e??p(s).map(({props:{value:t,label:e,attributes:s,default:n}})=>({value:t,label:e,attributes:s,default:n})),n=(0,j.XI)(t,(t,e)=>t.value===e.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(t=>t.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return t},[e,s])}(t),[a,f]=(0,o.useState)(()=>(function({defaultValue:t,tabValues:e}){if(0===e.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:e}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${e.map(t=>t.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}let s=e.find(t=>t.default)??e[0];if(!s)throw Error("Unexpected error: 0 tabValues");return s.value})({defaultValue:s,tabValues:i})),[x,m]=function({queryString:t=!1,groupId:e}){let s=(0,l.W6)(),n=function({queryString:t=!1,groupId:e}){if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!e)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:t,groupId:e});return[(0,d.aZ)(n),(0,o.useCallback)(t=>{if(!n)return;let e=new URLSearchParams(s.location.search);e.set(n,t),s.replace({...s.location,search:e.toString()})},[n,s])]}({queryString:n,groupId:r}),[g,b]=function({groupId:t}){let e=t?`docusaurus.tab.${t}`:null,[s,n]=(0,u.Dv)(e);return[s,(0,o.useCallback)(t=>{e&&n.set(t)},[e,n])]}({groupId:r}),v=h({value:e=x??g,tabValues:i})?e:null;return(0,c.A)(()=>{v&&f(v)},[v]),{selectedValue:a,selectValue:(0,o.useCallback)(t=>{if(!h({value:t,tabValues:i}))throw Error(`Can't select invalid tab value=${t}`);f(t),m(t),b(t)},[m,b,i]),tabValues:i}}(t);return(0,n.jsxs)("div",{className:(0,r.A)(i.G.tabs.container,"tabs-container","tabList__CuJ"),children:[(0,n.jsx)(x,{...e,...t}),(0,n.jsx)(m,{...e,...t})]})}function b(t){let e=(0,f.A)();return(0,n.jsx)(g,{...t,children:p(t.children)},String(e))}},4429:function(t,e,s){s.d(e,{R:()=>i,x:()=>a});var n=s(6540);let o={},r=n.createContext(o);function i(t){let e=n.useContext(r);return n.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:i(t.components),n.createElement(r.Provider,{value:e},t.children)}}}]);